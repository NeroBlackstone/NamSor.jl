# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""APIClassifierOut
The list of classifiers and versions.

    APIClassifierOut(;
        classifierName=nothing,
        serving=nothing,
        learning=nothing,
        shuttingDown=nothing,
        probabilityCalibrated=nothing,
    )

    - classifierName::String : The classifier name
    - serving::Bool : True if the classifier is serving requests (has reached minimal learning, is not shutting down)
    - learning::Bool : True if the classifier is learning
    - shuttingDown::Bool : True if the classifier is shutting down
    - probabilityCalibrated::Bool : True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)
"""
Base.@kwdef mutable struct APIClassifierOut <: OpenAPI.APIModel
    classifierName::Union{Nothing, String} = nothing
    serving::Union{Nothing, Bool} = nothing
    learning::Union{Nothing, Bool} = nothing
    shuttingDown::Union{Nothing, Bool} = nothing
    probabilityCalibrated::Union{Nothing, Bool} = nothing

    function APIClassifierOut(classifierName, serving, learning, shuttingDown, probabilityCalibrated, )
        OpenAPI.validate_property(APIClassifierOut, Symbol("classifierName"), classifierName)
        OpenAPI.validate_property(APIClassifierOut, Symbol("serving"), serving)
        OpenAPI.validate_property(APIClassifierOut, Symbol("learning"), learning)
        OpenAPI.validate_property(APIClassifierOut, Symbol("shuttingDown"), shuttingDown)
        OpenAPI.validate_property(APIClassifierOut, Symbol("probabilityCalibrated"), probabilityCalibrated)
        return new(classifierName, serving, learning, shuttingDown, probabilityCalibrated, )
    end
end # type APIClassifierOut

const _property_types_APIClassifierOut = Dict{Symbol,String}(Symbol("classifierName")=>"String", Symbol("serving")=>"Bool", Symbol("learning")=>"Bool", Symbol("shuttingDown")=>"Bool", Symbol("probabilityCalibrated")=>"Bool", )
OpenAPI.property_type(::Type{ APIClassifierOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_APIClassifierOut[name]))}

function check_required(o::APIClassifierOut)
    true
end

function OpenAPI.validate_property(::Type{ APIClassifierOut }, name::Symbol, val)
end
