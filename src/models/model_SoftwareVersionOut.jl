# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SoftwareVersionOut
The software version.

    SoftwareVersionOut(;
        softwareNameAndVersion=nothing,
        softwareVersion=nothing,
    )

    - softwareNameAndVersion::String : The software version
    - softwareVersion::Vector{Int64} : The software version major minor build
"""
Base.@kwdef mutable struct SoftwareVersionOut <: OpenAPI.APIModel
    softwareNameAndVersion::Union{Nothing, String} = nothing
    softwareVersion::Union{Nothing, Vector{Int64}} = nothing

    function SoftwareVersionOut(softwareNameAndVersion, softwareVersion, )
        OpenAPI.validate_property(SoftwareVersionOut, Symbol("softwareNameAndVersion"), softwareNameAndVersion)
        OpenAPI.validate_property(SoftwareVersionOut, Symbol("softwareVersion"), softwareVersion)
        return new(softwareNameAndVersion, softwareVersion, )
    end
end # type SoftwareVersionOut

const _property_types_SoftwareVersionOut = Dict{Symbol,String}(Symbol("softwareNameAndVersion")=>"String", Symbol("softwareVersion")=>"Vector{Int64}", )
OpenAPI.property_type(::Type{ SoftwareVersionOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SoftwareVersionOut[name]))}

function check_required(o::SoftwareVersionOut)
    true
end

function OpenAPI.validate_property(::Type{ SoftwareVersionOut }, name::Symbol, val)
end
