# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BatchFirstLastNameUSRaceEthnicityOut
Represents the output of inferring the LIKELY US &#39;race/ethnicity&#39; from a personal name, given US country of residence and (optionally) a ZIP5 code.

    BatchFirstLastNameUSRaceEthnicityOut(;
        personalNames=nothing,
    )

    - personalNames::Vector{FirstLastNameUSRaceEthnicityOut} : Classified US &#39;race&#39;/ethnicized names
"""
Base.@kwdef mutable struct BatchFirstLastNameUSRaceEthnicityOut <: OpenAPI.APIModel
    personalNames::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FirstLastNameUSRaceEthnicityOut} }

    function BatchFirstLastNameUSRaceEthnicityOut(personalNames, )
        OpenAPI.validate_property(BatchFirstLastNameUSRaceEthnicityOut, Symbol("personalNames"), personalNames)
        return new(personalNames, )
    end
end # type BatchFirstLastNameUSRaceEthnicityOut

const _property_types_BatchFirstLastNameUSRaceEthnicityOut = Dict{Symbol,String}(Symbol("personalNames")=>"Vector{FirstLastNameUSRaceEthnicityOut}", )
OpenAPI.property_type(::Type{ BatchFirstLastNameUSRaceEthnicityOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BatchFirstLastNameUSRaceEthnicityOut[name]))}

function check_required(o::BatchFirstLastNameUSRaceEthnicityOut)
    true
end

function OpenAPI.validate_property(::Type{ BatchFirstLastNameUSRaceEthnicityOut }, name::Symbol, val)
end
