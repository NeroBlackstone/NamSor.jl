# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ReligionStatOut
Geographic religious statistics, assuming country is correctly predicted.

    ReligionStatOut(;
        religion=nothing,
        pct=nothing,
    )

    - religion::String
    - pct::Float64
"""
Base.@kwdef mutable struct ReligionStatOut <: OpenAPI.APIModel
    religion::Union{Nothing, String} = nothing
    pct::Union{Nothing, Float64} = nothing

    function ReligionStatOut(religion, pct, )
        OpenAPI.validate_property(ReligionStatOut, Symbol("religion"), religion)
        OpenAPI.validate_property(ReligionStatOut, Symbol("pct"), pct)
        return new(religion, pct, )
    end
end # type ReligionStatOut

const _property_types_ReligionStatOut = Dict{Symbol,String}(Symbol("religion")=>"String", Symbol("pct")=>"Float64", )
OpenAPI.property_type(::Type{ ReligionStatOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ReligionStatOut[name]))}

function check_required(o::ReligionStatOut)
    true
end

function OpenAPI.validate_property(::Type{ ReligionStatOut }, name::Symbol, val)
    if name === Symbol("pct")
        OpenAPI.validate_param(name, "ReligionStatOut", :format, val, "double")
    end
end
