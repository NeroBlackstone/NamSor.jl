# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MatchPersonalFirstLastNameIn

    MatchPersonalFirstLastNameIn(;
        id=nothing,
        name1=nothing,
        name2=nothing,
    )

    - id::String
    - name1::FirstLastNameIn
    - name2::PersonalNameIn
"""
Base.@kwdef mutable struct MatchPersonalFirstLastNameIn <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name1 = nothing # spec type: Union{ Nothing, FirstLastNameIn }
    name2 = nothing # spec type: Union{ Nothing, PersonalNameIn }

    function MatchPersonalFirstLastNameIn(id, name1, name2, )
        OpenAPI.validate_property(MatchPersonalFirstLastNameIn, Symbol("id"), id)
        OpenAPI.validate_property(MatchPersonalFirstLastNameIn, Symbol("name1"), name1)
        OpenAPI.validate_property(MatchPersonalFirstLastNameIn, Symbol("name2"), name2)
        return new(id, name1, name2, )
    end
end # type MatchPersonalFirstLastNameIn

const _property_types_MatchPersonalFirstLastNameIn = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name1")=>"FirstLastNameIn", Symbol("name2")=>"PersonalNameIn", )
OpenAPI.property_type(::Type{ MatchPersonalFirstLastNameIn }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MatchPersonalFirstLastNameIn[name]))}

function check_required(o::MatchPersonalFirstLastNameIn)
    true
end

function OpenAPI.validate_property(::Type{ MatchPersonalFirstLastNameIn }, name::Symbol, val)
end
