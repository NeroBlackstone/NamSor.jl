# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""NameMatchCandidatesOut
Classified matched names

    NameMatchCandidatesOut(;
        script=nothing,
        id=nothing,
        explanation=nothing,
        firstName=nothing,
        lastName=nothing,
        orderOption=nothing,
        matchCandidates=nothing,
    )

    - script::String
    - id::String
    - explanation::String
    - firstName::String : The first name (also known as given name)
    - lastName::String : The last name (also known as family name, or surname)
    - orderOption::String : The option for ordering
    - matchCandidates::Vector{NameMatchCandidateOut} : The ordered list of name matching candidates
"""
Base.@kwdef mutable struct NameMatchCandidatesOut <: OpenAPI.APIModel
    script::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    explanation::Union{Nothing, String} = nothing
    firstName::Union{Nothing, String} = nothing
    lastName::Union{Nothing, String} = nothing
    orderOption::Union{Nothing, String} = nothing
    matchCandidates::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{NameMatchCandidateOut} }

    function NameMatchCandidatesOut(script, id, explanation, firstName, lastName, orderOption, matchCandidates, )
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("script"), script)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("id"), id)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("explanation"), explanation)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("firstName"), firstName)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("lastName"), lastName)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("orderOption"), orderOption)
        OpenAPI.validate_property(NameMatchCandidatesOut, Symbol("matchCandidates"), matchCandidates)
        return new(script, id, explanation, firstName, lastName, orderOption, matchCandidates, )
    end
end # type NameMatchCandidatesOut

const _property_types_NameMatchCandidatesOut = Dict{Symbol,String}(Symbol("script")=>"String", Symbol("id")=>"String", Symbol("explanation")=>"String", Symbol("firstName")=>"String", Symbol("lastName")=>"String", Symbol("orderOption")=>"String", Symbol("matchCandidates")=>"Vector{NameMatchCandidateOut}", )
OpenAPI.property_type(::Type{ NameMatchCandidatesOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_NameMatchCandidatesOut[name]))}

function check_required(o::NameMatchCandidatesOut)
    true
end

function OpenAPI.validate_property(::Type{ NameMatchCandidatesOut }, name::Symbol, val)
end
