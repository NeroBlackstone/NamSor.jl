# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PersonalNameSubdivisionIn

    PersonalNameSubdivisionIn(;
        id=nothing,
        name=nothing,
        subdivisionIso=nothing,
    )

    - id::String
    - name::String
    - subdivisionIso::String
"""
Base.@kwdef mutable struct PersonalNameSubdivisionIn <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    subdivisionIso::Union{Nothing, String} = nothing

    function PersonalNameSubdivisionIn(id, name, subdivisionIso, )
        OpenAPI.validate_property(PersonalNameSubdivisionIn, Symbol("id"), id)
        OpenAPI.validate_property(PersonalNameSubdivisionIn, Symbol("name"), name)
        OpenAPI.validate_property(PersonalNameSubdivisionIn, Symbol("subdivisionIso"), subdivisionIso)
        return new(id, name, subdivisionIso, )
    end
end # type PersonalNameSubdivisionIn

const _property_types_PersonalNameSubdivisionIn = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("subdivisionIso")=>"String", )
OpenAPI.property_type(::Type{ PersonalNameSubdivisionIn }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PersonalNameSubdivisionIn[name]))}

function check_required(o::PersonalNameSubdivisionIn)
    true
end

function OpenAPI.validate_property(::Type{ PersonalNameSubdivisionIn }, name::Symbol, val)
end
