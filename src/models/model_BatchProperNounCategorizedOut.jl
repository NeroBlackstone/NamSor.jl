# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BatchProperNounCategorizedOut
Represents the output of inferring the common type (anthroponym, toponym, brand, etc.) from a list of proper names.

    BatchProperNounCategorizedOut(;
        properNouns=nothing,
    )

    - properNouns::Vector{ProperNounCategorizedOut} : Classified typed proper names
"""
Base.@kwdef mutable struct BatchProperNounCategorizedOut <: OpenAPI.APIModel
    properNouns::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProperNounCategorizedOut} }

    function BatchProperNounCategorizedOut(properNouns, )
        OpenAPI.validate_property(BatchProperNounCategorizedOut, Symbol("properNouns"), properNouns)
        return new(properNouns, )
    end
end # type BatchProperNounCategorizedOut

const _property_types_BatchProperNounCategorizedOut = Dict{Symbol,String}(Symbol("properNouns")=>"Vector{ProperNounCategorizedOut}", )
OpenAPI.property_type(::Type{ BatchProperNounCategorizedOut }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BatchProperNounCategorizedOut[name]))}

function check_required(o::BatchProperNounCategorizedOut)
    true
end

function OpenAPI.validate_property(::Type{ BatchProperNounCategorizedOut }, name::Symbol, val)
end
